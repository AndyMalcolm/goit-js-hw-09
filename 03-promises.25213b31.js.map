{"mappings":"AAiBA,MAAMA,EAAOC,SAASC,cAAc,QAGpC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFF,EAAQ,oBAAoBH,QAAeC,OAE3CG,EAAO,oBAAoBJ,QAAeC,MAAU,GAErDA,EAAM,G,CAZbL,EAAKa,iBAAiB,UAlBtB,SAA0BC,GACxBA,EAAMC,iBACN,MAAMV,EAAQL,EAAKgB,SAASX,MAAMY,MAC5BC,EAAOlB,EAAKgB,SAASE,KAAKD,MAC1BE,EAASnB,EAAKgB,SAASG,OAAOF,MAEpC,IAAK,IAAIG,EAAI,EAAGA,EAAID,EAAQC,IAC1BjB,EAAce,EAAMb,GACjBgB,MAAMC,IACLC,QAAQC,IAAI,oBAAqBF,EAAO,IAEzCG,OAAOC,IACNH,QAAQG,MAAM,oBAAqBA,EAAM,IAE7CrB,EAAQsB,OAAOtB,GAASsB,OAAOT,E","sources":["src/js/03-promises.js"],"sourcesContent":["function handleFormSubmit(event) {\n  event.preventDefault();\n  const delay = form.elements.delay.value;\n  const step = form.elements.step.value;\n  const amount = form.elements.amount.value;\n\n  for (let i = 0; i < amount; i++) {\n    createPromise(step, delay)\n      .then((result) => {\n        console.log('Promise resolved:', result);\n      })\n      .catch((error) => {\n        console.error('Promise rejected:', error);\n      });\n    delay = Number(delay) + Number(step);\n  }\n}\nconst form = document.querySelector('form');\nform.addEventListener('submit', handleFormSubmit);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    \n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`Fulfiled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n}"],"names":["$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","elements","value","step","amount","i","then","result","console","log","catch","error","Number"],"version":3,"file":"03-promises.25213b31.js.map"}